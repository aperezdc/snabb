#! /usr/bin/env lua
--
-- update-protocol-ids
-- Copyright (C) 2016 Adrian Perez <aperez@igalia.com>
--
-- Distributed under terms of the MIT license.
--

if #arg ~= 0 then
	io.stderr:write("Usage: update-protocol-ids < path/to/ndpi_protocol_ids.h\n")
	os.exit(1)
end

local items = {
	PROTOCOL = {},
	SERVICE  = {},
	CONTENT  = {},
}

--
-- Parse the input headerÃ§
--
local define_pattern = "^%#define%s+NDPI_([^_%s]+)_([^%s]+)%s+([%a%d_]+)"
local ref_pattern = "^NDPI_([^_%s]+)_([%a%d_]+)$"

for line in io.lines() do
	local kind, name, value = line:match(define_pattern)
	if kind and name and value then
		local ref_kind, ref_name = value:match(ref_pattern)
		if ref_kind and ref_name then
			local value = items[ref_kind][ref_name]
		elseif items[kind] then
			items[kind][name] = tonumber(value)
		end
	end
end

--
-- Generate Lua module
--
print("-- Generated by ljdnpi's tools/update-protocol-ids script")
for kind, tab in pairs(items) do
	print("local " .. kind:lower() .. "s = {")
	for name, value in pairs(tab) do
		print("  " .. name .. " = " .. value .. ",")
	end
	print("}")
end

print("return {")
for kind, _ in pairs(items) do
	print("  " .. kind:lower() .. " = " .. kind:lower() .. "s,")
end
print("}")
